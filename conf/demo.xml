<?xml version="1.0" encoding="UTF-8"?>

<configurations> 
  <import> 
    <documents> 
      <corpusDir memo="the directory that stores the txt files" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">data/training/corpus</corpusDir>  
      <includeFileTypes memo="filter files by extension names (separate by comma). If not filter defined, all files will be read">txt</includeFileTypes> 
    </documents>  
    <annotations memo="support Brat and eHOST format, the format will be automatically detected."> 
      <projectDir memo="the directory that hosts the eHOST project" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">data/training</projectDir>  
      <includeAnnotationTypes>Concept, Doc_Base</includeAnnotationTypes>  
      <enableSentenceSnippet>true</enableSentenceSnippet>  
      <overWriteAnnotatorName memo="if a name is set, all the annotations' annotator will be overwritten by this name">gold</overWriteAnnotatorName> 
    </annotations>  
    <ontology> 
      <owlFile memo="ontology owl file" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser">conf/test/colonoscopyQuality.owl</owlFile>  
      <exportDir memo="the directory to export the rule files" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">conf</exportDir> 
    </ontology>  
    <executes> 
      <ImportDocuments memo="Import corpus to database">edu.utah.bmi.simple.gui.task.Import txt</ImportDocuments>  
      <ViewImportedDocs memo="View the imported files in database">edu.utah.bmi.simple.gui.task.ViewImportDB doc</ViewImportedDocs>  
      <ImportAnnotations memo="Import annotations into the output table">edu.utah.bmi.simple.gui.task.Import anno</ImportAnnotations>  
      <ViewImportedAnnotations memo="View the imported annotations in database">edu.utah.bmi.simple.gui.task.ViewImportDB anno</ViewImportedAnnotations>  
      <ImportOntology memo="Convert the ontology file  into excel rule Files">edu.utah.bmi.simple.gui.task.ImportOntology</ImportOntology> 
    </executes> 
  </import>  
  <easycie> 
    <pipeLineSetting> 
      <tRule memo="FastNER rule file (token based)" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser" openable="true">conf/test/tRule.xlsx</tRule>  
      <fastNERCaseSensitive memo="whether the rule above is case sensitive">false</fastNERCaseSensitive>  
      <cRule memo="FastCNER rule file (character based). Default blank value will not use FastCNER" doubleClick=" edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser" openable="true"/>  
      <contextRule memo="FastContext rule file. Default blank value will not use FastContext" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser" openable="true">conf/test/context.xlsx</contextRule>  
      <featureInfRule memo="Feature inference rule file. Default blank value will not use this component." doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser" openable="true">conf/test/featureInf.xlsx</featureInfRule>  
      <docInfRule memo="Document inference rule file location. Default blank value will not use this component." doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser" openable="true">conf/test/docInf.xlsx</docInfRule>  
      <report memo="whether report the processing details at the end">t</report> 
    </pipeLineSetting>  
    <annotators> 
      <current memo="Mark current annotations with annotator: ">v1</current> 
    </annotators>  
    <executes> 
      <RunEasyCIE memo="Run Preannotator using current rules">edu.utah.bmi.simple.gui.task.RunEasyCIE</RunEasyCIE>  
      <ViewOutputInDB memo="View the output in database">edu.utah.bmi.simple.gui.task.ViewOutputDB</ViewOutputInDB> 
    </executes> 
  </easycie>  
  <compare> 
    <compare> 
      <targetAnnotator memo="Compare annotations from annotator: ">v1</targetAnnotator>  
      <targetRunId memo="run id of target annotator. Default is the latest run id when leave blank"/>  
      <referenceAnnotator memo="Compare annotations against annotator: ">gold</referenceAnnotator>  
      <referenceRunId memo="run id of reference annotator. Default is the latest run id when leave blank"/>  
      <referenceTable>REFERENCE</referenceTable>  
      <strictCompare>false</strictCompare>  
      <typeFilter memo="limit the comparison to a certain type">IND_PNEUMONIA,Pos_Doc,Neg_Doc</typeFilter> 
    </compare>  
    <executes> 
      <Compare memo="Compare the difference between two annotators">edu.utah.bmi.simple.gui.task.CompareTask</Compare>  
      <ViewComparedResults memo="View the output in database">edu.utah.bmi.simple.gui.task.ViewDiffDB</ViewComparedResults> 
    </executes> 
  </compare>  
  <debug> 
    <log> 
      <rushType memo="display types of RuSH (sentence segmentor and tokenizer) output"/>  
      <cNERType memo="display types of FastCNER output"/>  
      <tNERType memo="display types of FastNER output">Concept</tNERType>  
      <contextType memo="display types of FastContext output">Concept,Context</contextType>  
      <featureInfType memo="display types of FeatureInferencer output">Concept</featureInfType>  
      <docInfType memo="display types of DocInferencer output">Doc_Base</docInfType> 
    </log>  
    <executes> 
      <RunEasyCIEDebugger memo="Debug using string input">edu.utah.bmi.simple.gui.task.RunEasyCIEDebugger</RunEasyCIEDebugger> 
    </executes> 
  </debug>  
  <export> 
    <format> 
      <ehost memo="the directory to save the exported ehost files" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">data/output/ehost</ehost>  
      <brat memo="the directory to save the exported brat files" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">data/output/brat</brat>  
      <uima memo="the directory to save the exported uima xmi files" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigDirectoryChooser">data/output/xmi</uima>  
      <exportTypes memo="If specified, then only these types will be displayed(separate by comma). If not, only Concepts will be saved. To save document conclusion, add type Doc_BASE">Concept</exportTypes> 
    </format>  
    <executes> 
      <ExportEhost memo="Run Preannotator and export the annotation to eHOST format">edu.utah.bmi.simple.gui.task.RunEasyCIE ehost</ExportEhost>  
      <ExportBrat memo="Run Preannotator and export the annotation to brat format">edu.utah.bmi.simple.gui.task.RunEasyCIE brat</ExportBrat>  
      <ExportXMI memo="Run Preannotator and export the annotation to UIMA XMI format">edu.utah.bmi.simple.gui.task.RunEasyCIE xmi</ExportXMI>  
      <View memo="View exported UIMA annotation format">edu.utah.bmi.simple.gui.task.Viewer</View> 
    </executes> 
  </export>  
  <settings> 
    <import> 
      <dbFile memo="the db file(or configuration file) used to saved the txt corpus" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser">conf/dbconfig.xml</dbFile>  
      <table memo="the table used to saved the txt corpus">DOCUMENTS</table>  
      <datasetId memo="data set id (Default is '0'. Use to differentiate different dataset in the same table.)">n</datasetId>  
      <overwrite memo="if the table exist, whether overwrite it">true</overwrite> 
    </import>  
    <reference> 
      <table>REFERENCE</table> 
    </reference>  
    <output> 
      <dbFile memo="the db file(or configuration file) used to saved the outputs" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser">conf/dbconfig.xml</dbFile>  
      <table memo="the table used to saved the annotations">OUTPUT</table>  
      <compareTable memo="the table used to saved the annotations">DIFF</compareTable> 
    </output>  
    <nlpComponents> 
      <rush memo="RuSH sentence segmenter configuration file" doubleClick="edu.utah.bmi.simple.gui.doubleclick.ConfigFileChooser">conf/rush.xlsx</rush> 
    </nlpComponents>  
    <viewer> 
      <preTag>&lt;html&gt;&lt;body style="margin: 0; padding: 0"&gt; &lt;div id="mydiv"&gt;</preTag>  
      <postTag>&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;</postTag>  
      <highlighter_begin memo="Set default color to FFFFF, then the viewer will pick one from the color pool below.">&lt;span style="background-color: #FFFFFF"&gt;</highlighter_begin>  
      <highlighter_end>&lt;/span&gt;</highlighter_end>  
      <snippet_length>90</snippet_length>  
      <random_pick_color memo="whether randomly pick a color from the color pool below or pick in order">f</random_pick_color>  
      <color_pool>fffe4d|efdecd|ffbf00|00ffff|9966cc|ed872d|a3c1ad|a4c659|8db600|89cff0|fbceb1|7fffd4|e9d66b|87a96b|ff9966|21abcd|deb887|848482|fdee00|f4c2c2|ff2052|a1caf1|007fff|b2beb5|5d8aa8</color_pool> 
    </viewer>  
    <help>https://github.com/jianlins/EasyCIE_GUI/wiki</help>  
    <issues>https://github.com/jianlins/EasyCIE_GUI/issues</issues> 
  </settings> 
</configurations>
